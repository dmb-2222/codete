{"version":3,"sources":["componets/Header/Header.module.css","componets/Sections/Sections.module.css","componets/SearchForm/SearchForm.module.css","componets/Items/Items.module.css","App.module.css","redux/action.js","redux/store.js","redux/reducer.js","componets/Header/Header.jsx","componets/Sections/Sections.jsx","redux/selector.js","componets/Sections/index.jsx","componets/SearchForm/SearchForm.jsx","componets/Items/Item/Item.jsx","componets/Items/Item/index.jsx","componets/Items/Items.jsx","componets/Pagination/Paginations.jsx","Pages/ParagraphPage/ParagraphPage.jsx","Pages/ParagraphPage/index.jsx","Pages/DescriptionParagraphPage/DescriptionParagraphPage.jsx","Pages/DescriptionParagraphPage/index.jsx","App.js","index.js"],"names":["module","exports","Type","rootReducer","combineReducers","paragraphs","state","action","type","payload","publications","filter","par","section","name","title","includes","value","text","paragraph","id","store","createStore","devToolsEnhancer","Header","className","styles","header","Sections","toChoiceCategory","history","useHistory","onClickLink","e","currentTarget","slice","location","pathname","push","container","Button","variant","color","onClick","getParagraphReducer","getPuplications","getParagraph","connect","dispatch","category","handleCategory","SearchForm","handleInput","handeleSubmit","searchForm","onSubmit","autoComplete","placeholder","onChange","Text","styled","p","props","isParagraph","Item","toChoiceParagraph","to","handleParagraph","Items","classes","makeStyles","root","marginTop","marginBottom","padding","justifyContent","display","flexDirection","list","maxWidth","marginLeft","useStyles","items","map","key","Card","MyPagination","Pagination","PaginationComponent","postPerPage","totalPosts","currentPage","handleChange","pageNumber","i","Math","ceil","count","page","ParagraphPage","searchParagraph","useState","serchInput","setSerchInput","setCurrentPage","indexOfLastPost","indexOfFirstPost","curentPosts","target","preventDefault","length","handleSearch","DescriptionParagraphPage","puplications","useEffect","data","wrapper","path","exact","component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d29a595c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5q5-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sections_container__5gMpq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__26Jrk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Items_items__JY6L4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1n8Es\"};","export const Type = {\r\n  PARAGRAPH: \"PARAGRAPH\",\r\n  GET_ALL_PUBLICATIONS: \"GET_ALL_PUBLICATIONS\",\r\n  GET_PARAGRAPH: \"GET_PARAGRAPH\",\r\n  SEARCH: \"SEARCH\",\r\n};\r\n\r\nexport const setPublications = (publications) => ({\r\n  type: Type.GET_ALL_PUBLICATIONS,\r\n  payload: publications,\r\n});\r\n\r\nexport const handleCategory = (name, publications) => ({\r\n  type: Type.PARAGRAPH,\r\n  payload: { name, publications },\r\n});\r\n\r\nexport const handleParagraph = (id, publications) => ({\r\n  type: Type.GET_PARAGRAPH,\r\n  payload: { id, publications },\r\n});\r\n\r\nexport const handleSearch = (paragraphs, value) => ({\r\n  type: Type.SEARCH,\r\n  payload: {paragraphs, value},\r\n});\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport {\r\n  paragraphReducerFilter,\r\n  publicationsReducer,\r\n  paragraphReducer,\r\n} from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  paragraphs: paragraphReducerFilter,\r\n  publications: publicationsReducer,\r\n  paragraph: paragraphReducer,\r\n});\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store;\r\n","import { Type } from \"./action\";\r\n\r\nexport const publicationsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case Type.GET_ALL_PUBLICATIONS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const paragraphReducerFilter = (state = [], action) => {\r\n  switch (action.type) {\r\n    case Type.PARAGRAPH:\r\n      return action.payload.publications.filter(\r\n        (par) => par.section === action.payload.name\r\n      );\r\n    case Type.SEARCH:\r\n      return action.payload.paragraphs.filter(\r\n        (par) =>\r\n          par.title.includes(action.payload.value) ||\r\n          par.text.includes(action.payload.value)\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const paragraphReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case Type.GET_PARAGRAPH:\r\n      return action.payload.publications.filter(\r\n        (par) => par.id === action.payload.id\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styles from './Header.module.css'\r\n\r\nconst Header = () => (\r\n  <div className={styles.header}>\r\n    <h1>Hi! This is test Frontend</h1>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"./Sections.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Sections = ({ toChoiceCategory, publications }) => {\r\n  const history = useHistory();\r\n  const onClickLink = (e) => {\r\n    const { name } = e.currentTarget;\r\n    toChoiceCategory(name.slice(1), publications);\r\n    if(name!==history.location.pathname){\r\n      history.push(name);\r\n    } \r\n    \r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        name=\"/section1\"\r\n        onClick={onClickLink}\r\n      >\r\n        Sections 1\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        name=\"/section2\"\r\n        onClick={onClickLink}\r\n      >\r\n        Sections 2\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        name=\"/section3\"\r\n        onClick={onClickLink}\r\n      >\r\n        Sections 3\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default Sections;\r\n","export const getParagraphReducer = state => state.paragraphs;\r\nexport const getPuplications = state => state.publications;\r\nexport const getParagraph = state => state.paragraph;","import { connect } from \"react-redux\";\r\nimport Sections from \"./Sections\";\r\n\r\n// Store\r\nimport { handleCategory } from \"../../redux/action\";\r\nimport { getPuplications } from \"../../redux/selector\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toChoiceCategory: (category, publications) =>\r\n    dispatch(handleCategory(category, publications)),\r\n});\r\nconst mapStateToProps = (state) => ({\r\n  publications: getPuplications(state),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sections);\r\n","import React from \"react\";\nimport styles from './SearchForm.module.css'\n\nconst SearchForm = ({ handleInput, handeleSubmit, value }) => {\n  return (\n    <form className={styles.searchForm} onSubmit={handeleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search paragraph...\"\n        onChange={handleInput}\n        value={value}\n      />\n    </form>\n  );\n};\nexport default SearchForm;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n// import style from \"./Item.module.css\";\r\n\r\nconst Text = styled.p`\r\n  text-overflow: ${(props) => props.isParagraph && \"ellipsis\"};\r\n  white-space: ${(props) => props.isParagraph && \"nowrap\"};\r\n  overflow: ${(props) => props.isParagraph && \"hidden\"};\r\n`;\r\n\r\nconst Item = ({\r\n  title,\r\n  text,\r\n  id,\r\n  toChoiceParagraph,\r\n  publications,\r\n  isParagraph = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      <p>{title}</p>\r\n      <Text isParagraph={!isParagraph}>{text}</Text>\r\n      {!isParagraph && (\r\n        \r\n        <Link\r\n          to={`paragraph${id}`}\r\n          onClick={() => toChoiceParagraph(id, publications)}\r\n        >\r\n          More\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","// export { default } from './Item'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Item from \"./Item\";\r\n// Store\r\nimport { handleParagraph } from \"../../../redux/action\";\r\nimport { getPuplications } from \"../../../redux/selector\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toChoiceParagraph: (id, publications) =>\r\n    dispatch(handleParagraph(id, publications)),\r\n});\r\nconst mapStateToProps = (state) => ({\r\n  publications: getPuplications(state),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Item from \"./Item\";\r\nimport styles from \"./Items.module.css\";\r\n\r\nconst Items = ({ paragraphs, isParagraph }) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      padding: 15,\r\n      justifyContent: \"space-between\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    list: {\r\n      maxWidth: isParagraph ? 800 : 180,\r\n      marginLeft: 20,\r\n      display: \"flex\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <ul className={styles.items}>\r\n        {paragraphs.map((par) => (\r\n          <li key={par.id} className={classes.list}>\r\n            <Card className={classes.root}>\r\n              <Item\r\n                title={par.title}\r\n                text={par.text}\r\n                id={par.id}\r\n                isParagraph={isParagraph}\r\n              />\r\n            </Card>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport styles from \"styled-components\";\r\nconst MyPagination = styles(Pagination)`.MuiPagination-ul {    display: flex;\r\n    justify-content: center;}`;\r\nconst PaginationComponent = ({\r\n  postPerPage,\r\n  totalPosts,\r\n  currentPage,\r\n  handleChange,\r\n}) => {\r\n  let pageNumber = null;\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumber = i;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!!totalPosts && (\r\n        <MyPagination\r\n          count={pageNumber}\r\n          onChange={handleChange}\r\n          page={currentPage}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { useState } from \"react\";\r\nimport Search from \"../../componets/SearchForm\";\r\nimport Items from \"../../componets/Items\";\r\nimport PaginationComponent from \"../../componets/Pagination\";\r\n\r\nconst ParagraphPage = ({ paragraphs, searchParagraph }) => {\r\n  \r\n  const [serchInput, setSerchInput] = useState(\"\");\r\n  // const [handleSubmiteText, setHandleSubmite] = useState(\"\");\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postPerPage = 5;\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n  const curentPosts = paragraphs.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const handleInput = (e) => {\r\n    const { value } = e.target;\r\n    setSerchInput(value);\r\n  };\r\n  const handeleSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchParagraph(paragraphs, serchInput);\r\n    setSerchInput(\"\");\r\n  };\r\n\r\n  const handleChange = (e, value) => {\r\n    e.preventDefault();\r\n    \r\n    setCurrentPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <Search\r\n        handleInput={handleInput}\r\n        handeleSubmit={handeleSubmit}\r\n        value={serchInput}\r\n      />\r\n      {paragraphs.length !== 0 && <Items paragraphs={curentPosts} />}\r\n      <PaginationComponent\r\n        postPerPage={postPerPage}\r\n        totalPosts={paragraphs.length}\r\n        currentPage={currentPage}\r\n        handleChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ParagraphPage;\r\n","import { connect } from \"react-redux\";\r\nimport ParagraphPage from \"./ParagraphPage\";\r\n// Store\r\nimport { getParagraphReducer } from \"../../redux/selector\";\r\nimport {handleSearch} from '../../redux/action'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  paragraphs: getParagraphReducer(state),\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  searchParagraph: (paragraphs, value) =>\r\n    dispatch(handleSearch(paragraphs, value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParagraphPage);\r\n","import React from \"react\";\r\nimport Items from \"../../componets/Items\";\r\n\r\nconst DescriptionParagraphPage = ({ paragraph }) => {\r\n  return (\r\n    <div>\r\n      <Items paragraphs={paragraph} isParagraph={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescriptionParagraphPage;\r\n","// export { default } from \"./DescriptionParagraphPage\";\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\nimport DescriptionParagraphPage from \"./DescriptionParagraphPage\";\r\n// Store\r\n\r\nimport { getParagraph } from \"../../redux/selector\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    paragraph: getParagraph(state),\r\n});\r\nexport default connect(mapStateToProps)(DescriptionParagraphPage);\r\n","import React, {useEffect} from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {setPublications} from './redux/action'\nimport data from \"./publications.json\";\n\nimport Header from \"./componets/Header\";\nimport Sections from \"./componets/Sections\";\nimport ParagraphPage from \"./Pages/ParagraphPage\";\nimport styles from \"./App.module.css\";\nimport DescriptionParagraphPage from \"./Pages/DescriptionParagraphPage\";\n\nconst App = ({puplications}) => {\n  useEffect(()=>{\n    puplications(data)\n  })\n  return(\n  <div className={styles.wrapper}>\n    <Header />\n    <Sections />\n    <Switch>\n      <Route path=\"/paragraph:id\" exact component={DescriptionParagraphPage} />\n      <Route path=\"/section:id\" exact component={ParagraphPage} />\n    </Switch>\n  </div>\n)};\n\nconst mapDispatchToProps = (dispatch) => ({\n  puplications: (puplications) =>\n    dispatch(setPublications(puplications)),\n});\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}